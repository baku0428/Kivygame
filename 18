from kivy.app import App
from kivy.uix.gridlayout import GridLayout
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.clock import Clock
from random import shuffle
from kivy.uix.popup import Popup

class MemoryGame(GridLayout):
    def __init__(self, **kwargs):
        super(MemoryGame, self).__init__(**kwargs)
        self.cols = 6
        self.cards = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R'] * 2
        shuffle(self.cards)
        self.exposed = [False] * len(self.cards)
        self.first_card_index = None
        self.second_card_index = None
        self.score = 0
        self.max_score = len(self.cards) // 2
        self.max_attempts = 25
        self.remaining_attempts = self.max_attempts
        self.time_limit = 100
        self.remaining_time = self.time_limit
        self.pause_button = Button(text="Pause", on_press=self.pause_game, size_hint_y=None, height=44)
        self.stop_button = Button(text="Stop", on_press=self.stop_game, size_hint_y=None, height=44)

        self.buttons = [Button(text=" ", on_press=self.card_pressed) for _ in self.cards]
        for button in self.buttons:
            self.add_widget(button)

        self.score_label = Label(text=f"Score: {self.score}/{self.max_score}", size_hint_y=None, height=44)
        self.remaining_attempts_label = Label(text=f"Attempts: {self.remaining_attempts}/{self.max_attempts}", size_hint_y=None, height=44)
        self.remaining_time_label = Label(text=f"Time: {self.remaining_time}s", size_hint_y=None, height=44)
        self.exit_button = Button(text="Exit", on_press=self.exit_game, size_hint_y=None, height=44)
        self.reset_button = Button(text="Reset", on_press=self.reset_game, size_hint_y=None, height=44)

        self.add_widget(self.score_label)
        self.add_widget(self.remaining_attempts_label)
        self.add_widget(self.remaining_time_label)
        self.add_widget(self.exit_button)
        self.add_widget(self.reset_button)
        self.add_widget(self.pause_button)
        self.add_widget(self.stop_button)

        Clock.schedule_interval(self.update_timer, 1)

class MemoryGameApp(App):
    def build(self):
        return MemoryGame()

if __name__ == '__main__':
    MemoryGameApp().run()
